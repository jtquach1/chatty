{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Joyce Quach\\\\Documents\\\\GitHub\\\\chatty\\\\src\\\\pages\\\\Chat.js\";\nimport React, { Component } from 'react';\nimport { auth, db } from '../services/firebase';\nexport default class Chat extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      user: auth().currentUser,\n      chats: [],\n      content: '',\n      readError: null,\n      writeError: null\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  async componentDidMount() {\n    this.setState({\n      readError: null\n    });\n\n    try {\n      db.ref(\"chats\").on(\"value\", snapshot => {\n        let chats = [];\n        snapshot.forEach(snap => {\n          chats.push(snap.val());\n        });\n        this.setState({\n          chats\n        });\n      });\n    } catch (error) {\n      this.setState({\n        readError: error.message\n      });\n    }\n  }\n\n  handleChange() {\n    this.setState({\n      content: event.target.value\n    });\n  }\n\n  async handleSubmit() {\n    event.preventDefault();\n    this.setState({\n      writeError: null\n    });\n\n    try {\n      await db.ref(\"chats\").push({\n        content: this.state.content,\n        timestamp: Date.now(),\n        uid: this.state.user.uid\n      });\n      this.setState({\n        content: ''\n      });\n    } catch (error) {\n      this.setState({\n        writeError: error.message\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"chats\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }\n    }, this.state.chats.map(chat => {\n      return /*#__PURE__*/React.createElement(\"p\", {\n        key: chat.timestamp,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 32\n        }\n      }, chat.content);\n    })), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      onChange: this.handleChange,\n      value: this.state.content,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 21\n      }\n    }), this.state.error ? /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 41\n      }\n    }, this.state.writeError) : null, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 21\n      }\n    }, \"Send\")), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }\n    }, \"Login as: \", /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 31\n      }\n    }, this.state.user.email)));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Joyce Quach/Documents/GitHub/chatty/src/pages/Chat.js"],"names":["React","Component","auth","db","Chat","constructor","props","state","user","currentUser","chats","content","readError","writeError","handleChange","bind","handleSubmit","componentDidMount","setState","ref","on","snapshot","forEach","snap","push","val","error","message","event","target","value","preventDefault","timestamp","Date","now","uid","render","map","chat","email"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { auth, db } from '../services/firebase';\r\n\r\nexport default class Chat extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            user: auth().currentUser,\r\n            chats: [],\r\n            content: '',\r\n            readError: null,\r\n            writeError: null\r\n        };\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        this.setState({ readError: null });\r\n        try {\r\n            db.ref(\"chats\").on(\"value\", snapshot => {\r\n                let chats = [];\r\n                snapshot.forEach((snap) => {\r\n                    chats.push(snap.val());\r\n                });\r\n                this.setState({ chats });\r\n            });\r\n        } catch (error) {\r\n            this.setState({ readError: error.message });\r\n        }\r\n    }\r\n\r\n    handleChange() {\r\n        this.setState({\r\n            content: event.target.value\r\n        });\r\n    }\r\n\r\n    async handleSubmit() {\r\n        event.preventDefault();\r\n        this.setState({ writeError: null });\r\n        try {\r\n            await db.ref(\"chats\").push({\r\n                content: this.state.content,\r\n                timestamp: Date.now(),\r\n                uid: this.state.user.uid\r\n            });\r\n            this.setState({ content: '' });\r\n        } catch (error) {\r\n            this.setState({ writeError: error.message });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"chats\">\r\n                    {this.state.chats.map(chat => {\r\n                        return <p key={chat.timestamp}>{chat.content}</p>\r\n                    })}\r\n                </div>\r\n                {/* message form */}\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <input onChange={this.handleChange} value={this.state.content}></input>\r\n                    {this.state.error ? <p>{this.state.writeError}</p> : null}\r\n                    <button type=\"submit\">Send</button>\r\n                </form>\r\n                <div>\r\n                    Login as: <strong>{this.state.user.email}</strong>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}
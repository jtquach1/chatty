{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Joyce Quach\\\\Documents\\\\GitHub\\\\chatty\\\\src\\\\pages\\\\Chat.js\";\nimport React, { Component } from 'react';\nimport { auth, db } from '../services/firebase';\nexport default class Chat extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      user: auth().currentUser,\n      chats: [],\n      content: '',\n      readError: null,\n      writeError: null\n    };\n  }\n\n  async componentDidMount() {\n    this.setState({\n      readError: null\n    });\n\n    try {\n      db.ref(\"chats\").on(\"value\", snapshot => {\n        let chats = [];\n        snapshot.forEach(snap => {\n          chats.push(snap.val());\n        });\n        this.setState({\n          chats\n        });\n      });\n    } catch (error) {\n      this.setState({\n        readError: error.message\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"chats\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }\n    }, this.state.chats.map(chat => {\n      return /*#__PURE__*/React.createElement(\"p\", {\n        key: chat.timestamp,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 32\n        }\n      }, chat.content);\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Joyce Quach/Documents/GitHub/chatty/src/pages/Chat.js"],"names":["React","Component","auth","db","Chat","constructor","props","state","user","currentUser","chats","content","readError","writeError","componentDidMount","setState","ref","on","snapshot","forEach","snap","push","val","error","message","render","map","chat","timestamp"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,EAAeC,EAAf,QAAyB,sBAAzB;AAEA,eAAe,MAAMC,IAAN,SAAmBH,SAAnB,CAA6B;AACxCI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,IAAI,EAAEN,IAAI,GAAGO,WADJ;AAETC,MAAAA,KAAK,EAAE,EAFE;AAGTC,MAAAA,OAAO,EAAE,EAHA;AAITC,MAAAA,SAAS,EAAE,IAJF;AAKTC,MAAAA,UAAU,EAAE;AALH,KAAb;AAOH;;AAED,QAAMC,iBAAN,GAA0B;AACtB,SAAKC,QAAL,CAAc;AAAEH,MAAAA,SAAS,EAAE;AAAb,KAAd;;AACA,QAAI;AACAT,MAAAA,EAAE,CAACa,GAAH,CAAO,OAAP,EAAgBC,EAAhB,CAAmB,OAAnB,EAA4BC,QAAQ,IAAI;AACpC,YAAIR,KAAK,GAAG,EAAZ;AACAQ,QAAAA,QAAQ,CAACC,OAAT,CAAkBC,IAAD,IAAU;AACvBV,UAAAA,KAAK,CAACW,IAAN,CAAWD,IAAI,CAACE,GAAL,EAAX;AACH,SAFD;AAGA,aAAKP,QAAL,CAAc;AAAEL,UAAAA;AAAF,SAAd;AACH,OAND;AAOH,KARD,CAQE,OAAOa,KAAP,EAAc;AACZ,WAAKR,QAAL,CAAc;AAAEH,QAAAA,SAAS,EAAEW,KAAK,CAACC;AAAnB,OAAd;AACH;AACJ;;AAEDC,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKlB,KAAL,CAAWG,KAAX,CAAiBgB,GAAjB,CAAqBC,IAAI,IAAI;AAC1B,0BAAO;AAAG,QAAA,GAAG,EAAEA,IAAI,CAACC,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAyBD,IAAI,CAAChB,OAA9B,CAAP;AACH,KAFA,CADL,CADJ,eAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANJ,CADJ;AAYH;;AAxCuC","sourcesContent":["import React, { Component } from 'react';\r\nimport { auth, db } from '../services/firebase';\r\n\r\nexport default class Chat extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            user: auth().currentUser,\r\n            chats: [],\r\n            content: '',\r\n            readError: null,\r\n            writeError: null\r\n        };\r\n    }\r\n\r\n    async componentDidMount() {\r\n        this.setState({ readError: null });\r\n        try {\r\n            db.ref(\"chats\").on(\"value\", snapshot => {\r\n                let chats = [];\r\n                snapshot.forEach((snap) => {\r\n                    chats.push(snap.val());\r\n                });\r\n                this.setState({ chats });\r\n            });\r\n        } catch (error) {\r\n            this.setState({ readError: error.message });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"chats\">\r\n                    {this.state.chats.map(chat => {\r\n                        return <p key={chat.timestamp}>{chat.content}</p>\r\n                    })}\r\n                </div>\r\n                <div>\r\n\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}